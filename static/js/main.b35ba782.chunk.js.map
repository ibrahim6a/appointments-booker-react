{"version":3,"sources":["Components/Form.js","Components/TimeSlot.js","Components/TimeSlots.js","App.js","index.js"],"names":["M","window","Form","state","date","user","fullName","email","updateUser","event","currentState","target","name","value","setState","formSubmit","preventDefault","fetchAvailableTimes","selectedDate","props","handleSubmit","elems","document","querySelectorAll","instance","Datepicker","init","disableWeekends","format","options","onSelect","toString","fetch","this","then","response","console","log","json","result","catch","error","className","onSubmit","type","onChange","Component","TimeSlot","actionLink","timeSlot","available","onClick","bookAppointment","TimeSlots","availableTimes","id","time","bookSlot","map","key","App","selectedTime","showTimeSlots","setTimeout","sendRequestToServer","method","headers","body","JSON","stringify","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNACMA,EAAIC,OAAOD,EAgFFE,E,4MA3EXC,MAAQ,CACJC,KAAM,GACNC,KAAM,CACFC,SAAU,WACVC,MAAO,iB,EA6BfC,WAAa,SAACC,GAAW,IAEfC,EAFc,eACE,EAAKP,OAAnBE,KADY,EAGII,EAAME,OAAtBC,EAHY,EAGZA,KAAMC,EAHM,EAGNA,MACdH,EAAaE,GAAQC,EACrB,EAAKC,SAAS,CAAET,KAAMK,K,EAG1BK,WAAa,SAACN,GACVA,EAAMO,iBACN,EAAKC,sBACL,EAAKH,SAAS,CAAEV,KAAM,EAAKc,eAC3B,EAAKC,MAAMC,aAAa,EAAKjB,MAAME,KAAM,EAAKF,MAAMC,O,kEArCnC,IAAD,OACRiB,EAAQC,SAASC,iBAAiB,eAElCC,EADYxB,EAAEyB,WAAWC,KAAKL,EAAO,CAAEM,iBAAiB,EAAMC,OAAQ,iBACjD,GACzBJ,EAASK,QAAQC,SAAW,WACxB,EAAKhB,SAAS,CAAEV,KAAMoB,EAASpB,KAAK2B,gB,4CAO5CC,MAAM,8BAAD,OAA+BC,KAAK9B,MAAMC,OAC7C8B,MAAM,SAACC,GAEJ,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAElBJ,MAAM,SAACK,GACJH,QAAQC,IAAIE,MAEdC,OAAO,SAACC,GACLL,QAAQC,IAAII,Q,+BAoBnB,OACI,yBAAKC,UAAY,aACb,0BAAMC,SAAYV,KAAKlB,YACnB,yBAAK2B,UAAY,eACb,6CACA,2BAAOA,UAAY,GAAGE,KAAO,OAAOhC,KAAO,WAAWC,MAASoB,KAAK9B,MAAME,KAAKC,SAAUuC,SAAYZ,KAAKzB,cAG9G,yBAAKkC,UAAY,eACb,0CACA,2BAAOA,UAAY,GAAGE,KAAO,OAAOhC,KAAO,QAAQC,MAASoB,KAAK9B,MAAME,KAAKE,MAAOsC,SAAYZ,KAAKzB,cAGxG,yBAAKkC,UAAY,eACb,+CACA,2BAAOE,KAAO,OAAOF,UAAY,gBAGrC,2BAAOE,KAAO,SAAS/B,MAAQ,qBAAqB6B,UAAY,c,GArEjEI,aC2BJC,MA5Bf,SAAmB5B,GAEf,IAAI6B,EAWJ,OARIA,EADA7B,EAAM8B,SAASC,UACF,4BAAQR,UAAY,oCAAoCS,QAAW,WAC5EhC,EAAMiC,gBAAgBjC,EAAM8B,YADnB,YAKA,4BAAQP,UAAY,8CAA6C,2CAI9E,yBAAKA,UAAU,UACf,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,2BACf,0BAAMA,UAAU,cAAcvB,EAAM8B,SAASA,WAE7C,yBAAKP,UAAU,eACVM,MCcFK,E,4MAhCXlD,MAAQ,CACJmD,eAAgB,CACZ,CAACC,GAAI,EAAGN,SAAU,EAAGC,WAAW,GAChC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,GACjC,CAACK,GAAI,EAAGN,SAAU,GAAIC,WAAW,K,EAIzCE,gBAAkB,SAACI,GACf,EAAKrC,MAAMsC,SAASD,I,uDAGd,IAAD,OAEL,OACI,yBAAKd,UAAY,aACb,+CACA,yBAAKA,UAAY,OAChBT,KAAK9B,MAAMmD,eAAeI,KAAK,SAACT,GAC7B,OAAO,kBAAC,EAAD,CAAUU,IAAOV,EAASA,SAAUA,SAAYA,EAAUG,gBAAmB,EAAKA,2B,GA1BrFN,aCuDTc,E,4MAnDbzD,MAAQ,CACNE,KAAM,KACNa,aAAc,KACd2C,aAAc,M,EAGhBC,cAAgB,SAACzD,EAAMa,GACrB,EAAKJ,SAAS,CAAET,KAAMA,EAAMa,aAAcA,K,EAG5CuC,SAAW,SAACD,GACV,EAAK1C,SAAS,CAAE+C,aAAcL,EAAKP,WACnCb,QAAQC,IAAI,EAAKlC,MAAMe,cAEvB6C,YAAW,WACT,EAAKC,wBACA,M,EAKTA,oBAAsB,WAElBhC,MAAM,yBAA0B,CAChCiC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,EAAKlE,SAE1B+B,MAAM,SAACC,GACN,OAAOA,EAASG,UAEhBJ,MAAM,SAACK,GACNH,QAAQC,IAAIE,MAEZC,OAAO,SAACC,GACPL,QAAQC,IAAII,O,uDAKjB,OACE,6BACC,kBAAC,EAAD,CAAMrB,aAAgBa,KAAK6B,gBAC3B7B,KAAK9B,MAAMe,cAAgB,kBAAC,EAAD,CAAWuC,SAAYxB,KAAKwB,gB,GA/C5CX,aCAlBwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlD,SAASmD,eAAe,U","file":"static/js/main.b35ba782.chunk.js","sourcesContent":["import React, { Component } from 'react';\nconst M = window.M;\n\n\nclass Form extends Component {\n    \n    state = {\n        date: '',\n        user: {\n            fullName: 'John Doe',\n            email: 'jd@gmail.com'\n        }\n    }\n   \n    componentDidMount() {\n            let elems = document.querySelectorAll('.datepicker');\n            let instances = M.Datepicker.init(elems, { disableWeekends: true, format: 'dd, mm, yyyy' });\n            let instance = instances[0];\n            instance.options.onSelect = () => {\n                this.setState({ date: instance.date.toString() })\n            }\n    }\n\n \n    fetchAvailableTimes() {\n        // fetch(`https://appointment-app-server.herokuapp.com/date/${this.state.date}`)\n        fetch(`http://localhost:3000/date/${this.state.date}`)\n         .then( (response) => {\n             console.log(response);\n             return response.json();\n         })\n          .then( (result) => {\n              console.log(result);\n          })\n           .catch( (error) => {\n               console.log(error);\n           })\n    }   \n\n    updateUser = (event) => {\n        const { user } = { ...this.state };\n        const currentState = user;\n        const { name, value } = event.target;\n        currentState[name] = value;\n        this.setState({ user: currentState });\n    }\n\n    formSubmit = (event) => {\n        event.preventDefault();\n        this.fetchAvailableTimes();\n        this.setState({ date: this.selectedDate});\n        this.props.handleSubmit(this.state.user, this.state.date);\n    }\n\n    render() {\n        return (\n            <div className = 'container'>\n                <form onSubmit = {this.formSubmit}>\n                    <div className = 'input-field'>\n                        <label>Full Name:</label>\n                        <input className = '' type = 'text' name = 'fullName' value = {this.state.user.fullName} onChange = {this.updateUser}></input>\n                    </div>\n\n                    <div className = 'input-field'>\n                        <label>Email: </label>\n                        <input className = '' type = 'text' name = 'email' value = {this.state.user.email} onChange = {this.updateUser}></input>\n                    </div>\n\n                    <div className = 'input-field'>\n                        <label>Select Date:</label>\n                        <input type = 'text' className = 'datepicker'></input>\n                    </div>\n\n                    <input type = 'submit' value = 'Check Availability' className = 'btn' ></input>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\n\n\nfunction TimeSlot (props) {\n\n    let actionLink;\n\n    if (props.timeSlot.available) {\n        actionLink = <button className = 'btn-flat amber-text text-accent-4' onClick = {() => {\n            props.bookAppointment(props.timeSlot)\n        }}>Book Now</button>;\n        \n    } else {\n        actionLink = <button className = 'btn-flat amber-text text-accent-4 disabled'><s>Unavaliable</s></button>;\n    }\n\n    return (\n        <div className=\"col s3\">\n        <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n            <span className=\"card-title\">{props.timeSlot.timeSlot}</span>\n            </div>\n            <div className=\"card-action\">\n                {actionLink}\n            </div>\n        </div>\n        </div>\n\n    )\n}\n\nexport default TimeSlot;","import React, { Component } from 'react';\nimport TimeSlot from './TimeSlot';\n\nclass TimeSlots extends Component {\n\n    state = {\n        availableTimes: [\n            {id: 0, timeSlot: 9, available: true},\n            {id: 1, timeSlot: 10, available: true},\n            {id: 2, timeSlot: 11, available: true},\n            {id: 3, timeSlot: 12, available: true},\n            {id: 4, timeSlot: 13, available: true},\n            {id: 5, timeSlot: 14, available: true},\n            {id: 6, timeSlot: 15, available: true},\n            {id: 7, timeSlot: 16, available: true},\n        ]\n    }\n\n    bookAppointment = (time) => {\n        this.props.bookSlot(time);\n    }\n\n    render() {\n\n        return (\n            <div className = 'container'>\n                <h4>Available Slots</h4>\n                <div className = 'row'>\n                {this.state.availableTimes.map( (timeSlot) => {\n                    return <TimeSlot key = {timeSlot.timeSlot} timeSlot = {timeSlot} bookAppointment = {this.bookAppointment}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TimeSlots;","import React, { Component } from 'react';\nimport Form from './Components/Form';\nimport TimeSlots from './Components/TimeSlots';\n\n\nclass App extends Component {\n\n  state = {\n    user: null,\n    selectedDate: null,\n    selectedTime: null\n  }\n\n  showTimeSlots = (user, selectedDate) => {\n    this.setState({ user: user, selectedDate: selectedDate })\n  }\n\n  bookSlot = (time) => {\n    this.setState({ selectedTime: time.timeSlot });\n    console.log(this.state.selectedDate);\n\n    setTimeout(() => {\n      this.sendRequestToServer()\n        }, 1000);\n    \n  }\n\n\n  sendRequestToServer = () => {\n    // fetch(`https://appointment-app-server.herokuapp.com/`, {\n      fetch(`http://localhost:3000/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    })\n     .then( (response) => {\n       return response.json()\n     })\n      .then( (result) => {\n        console.log(result)\n      })\n       .catch( (error) => {\n         console.log(error)\n       })\n  }\n\n  render() {\n    return (\n      <div>\n       <Form handleSubmit = {this.showTimeSlots} />\n      {this.state.selectedDate && <TimeSlots bookSlot = {this.bookSlot}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}